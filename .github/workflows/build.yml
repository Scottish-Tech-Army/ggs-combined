name: Build
on:
  push:
    branches:
      - '**'        # run this job on all branches
      - '!main'     # ... except main
      - '!develop'  # ... and develop which have their own jobs
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: install node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: install backend dependencies
        working-directory: ./ggs-backend
        run: npm install

      - name: install backend resources dependencies
        working-directory: ./ggs-backend/resources/ggsLambda
        run: npm install

      - name: build backend
        working-directory: ./ggs-backend
        run: npm run build

# Backend tests need some work...        
#      - name: run backend tests
#        working-directory: ./ggs-backend/resources/ggsLambda
#        run: npm test

      - name: install frontend dependencies
        working-directory: ./ggs-frontend
        run: npm ci

      - name: create fake config.json
        working-directory: ./ggs-frontend/src
        run: |
          cat <<EOF > config.json
          {
            "GGS-backend-test": {
              "GGSClientApiEndpointFA6F00A7": "https://xxxxxxxxxxxx.execute-api.eu-west-2.amazonaws.com/test/",
              "LocationPhotosbucket": "xxxxxxxxxxxx-ggstestlocationphotosxxxxxxxxx",
              "ggstestlocationphotosURL": "https://xxxxxxxxxxxxxx.cloudfront.net",
              "GGSclientAPIendpoint": "https://xxxxxxxxxxxx.execute-api.eu-west-2.amazonaws.com/test/",
              "Locationstable": "GGS-backend-test-GGStestLocationsxxxxxxxxxxxxxxx",
              "Unitstable": "GGS-backend-test-GGStestUnitszzzxxxxxxxxxxxxxx"
            }
          }
          EOF

      - name: build frontend
        working-directory: ./ggs-frontend
        env:
          CI: false         # CI=true makes react build fail on warnings
        run: npm run build

#      - name: run frontend tests
#        working-directory: ./ggs-frontend
#        run: npm test
